events {
    worker_connections 1024;
}

http {
    upstream serversupstream {
        server server1:3000 max_fails=5 fail_timeout=30s; # If fails 5 times, disable the host 30s
        server server2:3000;
    }


    # Reverse proxy
    server {
        listen 80;
        listen [::]:80;

        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        
        # Let's Encrypt SSL
        # include conf.d/include/letsencrypt-acme-challenge.conf;
        # include conf.d/include/ssl-ciphers.conf;
        # ssl_certificate /etc/letsencrypt/live/npm-5/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/npm-5/privkey.pem;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        ### IM IN LOCALHOST, then I'm not using server_name
        # server_name adriabama06.com;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            proxy_pass http://serversupstream;
            proxy_connect_timeout 2s; # Maimum time to wait for each server
        }

        location /usesever1 {
            proxy_pass http://server1:3000;
        }
        
        location /usesever2 {
            proxy_pass http://server2:3000;
        }
    }

    # default route: /data/nginx/cache
    proxy_cache_path /data/nginx/cache keys_zone=mycache:10m;

    # Static and caching
    server {
        listen 81;
        listen [::]:81;
        root /var/www/html;
        
        ### IM IN LOCALHOST, then I'm not using server_name
        # server_name backup.adriabama06.com;

        location / {
            try_files $uri $uri/ =404;
            # Try send $uri (.com/___URI___) example /hola try:
            # Send hola* (any file that starts with hola, can be .html, .png...)
            # Send hola/ (folder named hola)
            # Else 404
        }
    }
}