events {
    worker_connections 1024;
}

http {
    # Reverse proxy
    server {
        listen 80;
        listen [::]:80;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            proxy_pass http://static_server:3000;
        }

        # This will not work...
        ## location /api {
        ##     proxy_pass http://api_server:3000;
        ## }
        # Why? proxy_pass will pass to the server the /api but the server has only /ip and /headers
        # But don't has: /api/ip or /api/headers
        # So what...?

        # Add extra "/" at the end: /api -> /api/
        # Because if you acess: /api/ip the last "/" will not be removed and this will pass /ip to the prxoy
        # But is ok no..? No... Because after that we add a "/" to server:3000 -> server:3000/ and if we
        # append /ip to server:3000/ will end in server:3000//ip
        # and why not remove the "/" from server:3000/ ?
        # because when you not add an "/" at the end of the ip of the proxy
        # nginx will copy all the location instance of cutting the location path writted
        location /api/ {
            proxy_pass http://api_server:3000/;
        }

        # So then with this we can do:
        # /api can be for the lastest api version and /api/v0 for specific version
        location /api/v0/ {
            proxy_pass http://api_server:3000/;
        }

        # And you can add multiples api versions
        # location /api/v1/ {
        #     proxy_pass http://another_api_version_server:3000/;
        # }
    }
}