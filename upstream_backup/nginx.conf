events {
    worker_connections 1024;
}

http {
    upstream serversupstream {
        server server1:3000 max_fails=5 fail_timeout=30s; # If fails 5 times, disable the host 30s
        server server2:3000 max_fails=5 fail_timeout=30s; # If fails 5 times, disable the host 30s
        # add more servers before backup servers
        server server3:3000 backup;
    }

    server {
        listen 80;
        listen [::]:80;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        ### IM IN LOCALHOST, then I'm not using server_name
        # server_name adriabama06.com;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            proxy_pass http://serversupstream;
            proxy_connect_timeout 5s; # Maimum time to wait for each server
            
            # If the server 1 don't respond, the nginx add a fail to the server
            # and skips to the server2, and do the same
            # after test server1 and server2, none of them are available, if none of them has already the max fails
            # it will do again everything until reach the max fails in all of server
            # when ALL of the servers are disabled then nginx jumps to the backup servers
            # whenever there is a server available, this will be used, before jumping to the backup servers
        }

        location /usesever1 {
            proxy_pass http://server1:3000;
        }
        
        location /usesever2 {
            proxy_pass http://server2:3000;
        }

        location /usesever3 {
            proxy_pass http://server3:3000;
        }
    }
}